-Object
Dalam paradigma OOP, objek merupakan instance atau wujud nyata dari suatu kelas. 
Pemahaman mengenai objek tidak kalah pentingnya pada konsep pemrograman berorientasi objek. 
Salah satu kegunaan objek adalah untuk mengakses berbagai fungsi dan metode pada kelas. 
Objek bisa dibuat lebih dari satu.

-Menciptakan Object
Karena objek merupakan instansiasi dari kelas, untuk menciptakan suatu objek kita perlu mendeklarasikan tiap objek 
yang dibuat dengan mengikutsertakan kelasnya.
Pada Java untuk membuat sebuah objek terdapat 3 tahap :
1.) Declaration : mendeklarasikan nama sebuah objek.
2.) Instantiation : memerlukan sebuah perintah new untuk menciptakan objek.
3.) Initialization : inisialisasi dari sebuah objek setelah perintah new.

-Codelab Mencipatakan Objek
Pada contoh berikut kita praktikkan cara menciptakan suatu objek secara sederhana di dalam satu kelas.

Buatlah proyek baru dengan nama Objek dengan nama package com.Oop.object di dalamnya. 
Kemudian buatlah sebuah kelas baru dengan nama Hewan, kemudian tambahkan kode berikut:

package com.Oop.Object;

public class Hewan {
public void cetakNama(String nama) {
        System.out.println("Nama hewan: " + nama);
    }
}

Setelah itu, buatlah kelas baru dengan nama Main dan masukkan kode berikut di dalamnya:

public class Main {
    public static void main(String[] args) {
        // menciptakan object dengan nama 'objekHewan'
        Hewan objekHewan = new Hewan();
        objekHewan.cetakNama("Elang");
    }
}

Pada kode di atas kita mempunyai sebuah kelas bernama Hewan. Di dalam class tersebut kita mempunyai metode cetakNama yang mempunyai parameter nama. 
Pada metode cetakNama kita hanya melakukan perintah menampilkan berdasarkan parameter yang dikirim dengan menggunakan tipe data String.
public void cetakNama(String nama) {
    System.out.println("Nama hewan: " + nama);
}

Pada kode selanjutnya kita menciptakan suatu objek dengan perintah new. Sedangkan objekHewan merupakan nama dari objek yang kita buat.
Hewan objekHewan = new Hewan();

ntuk memanggil sebuah metode di dalam suatu kelas, kita dapat menggunakan (.) (titik).
objekNama.cetakNama("Elang");

Sampai di sini, kita telah mengerti bagaimana membuat objek secara sederhana.
